{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/webext-content-script-ping/webext-content-script-ping.js","webpack:///./node_modules/webext-domain-permission-toggle/webext-domain-permission-toggle.js","webpack:///./node_modules/webext-dynamic-content-scripts/src/index.js","webpack:///./node_modules/webext-options-sync/webext-options-sync.js","webpack:///./source/background.js"],"names":["browser","browserAction","onClicked","addListener","tabs","executeScript","file","insertCSS"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;;;;;;;;;;;;;AC3BA;;AAEA;AACA;AACA;;AAEA,SAAS,oBAAoB;;AAE7B;AACA,oBAAoB,cAAc;AAClC,gEAAgE,cAAc;AAC9E,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH,oDAAoD,WAAW,GAAG,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAoB;AAC5B;AACA,IAAI;AACJ;AACA,6BAA6B,iCAAiC;AAC9D,qBAAqB,iCAAiC;AACtD,KAAK;AACL;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uBAAuB;AAC7E;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA,GAAG;;AAEH,mCAAmC;AACnC;AACA,GAAG,OAAO;AACV;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA;;AAEA,qBAAqB,WAAW;AAChC,SAAS,KAAK;AACd,OAAO,MAAM;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC/JA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAA,QAAQC,aAAR,CAAsBC,SAAtB,CAAgCC,WAAhC,CAA4C,YAAM;AACjDH,SAAQI,IAAR,CAAaC,aAAb,CAA2B,EAACC,MAAM,yBAAP,EAA3B;AACAN,SAAQI,IAAR,CAAaG,SAAb,CAAuB,EAACD,MAAM,aAAP,EAAvB;AACCN,SAAQI,IAAR,CAAaC,aAAb,CAA2B,EAACC,MAAM,YAAP,EAA3B;AACD,CAJD,E","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./source/background.js\");\n","// https://github.com/bfred-it/webext-content-script-ping\n\n/**\n * Ping responder\n */\ndocument.__webextContentScriptLoaded = true;\n\n/**\n * Pinger\n */\nfunction pingContentScript(tab) {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.tabs.executeScript(tab.id || tab, {\n\t\t\tcode: 'document.__webextContentScriptLoaded',\n\t\t\trunAt: 'document_start'\n\t\t}, hasScriptAlready => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(chrome.runtime.lastError);\n\t\t\t} else {\n\t\t\t\tresolve(Boolean(hasScriptAlready[0]));\n\t\t\t}\n\t\t});\n\t});\n}\n\nif (typeof module === 'object') {\n\tmodule.exports = pingContentScript;\n}\n","// https://github.com/bfred-it/webext-domain-permission-toggle\n\nconst DCE = {\n\taddContextMenu(options) {\n\t\tconst contextMenuId = 'webext-domain-permission-toggle:add-permission';\n\n\t\tconst {name: extensionName} = chrome.runtime.getManifest();\n\n\t\toptions = Object.assign({\n\t\t\ttitle: `Enable ${extensionName} on this domain`,\n\t\t\treloadOnSuccess: `Do you want to reload this page to apply ${extensionName}?`\n\t\t}, options);\n\n\t\t// This has to happen onInstalled in Event Pages\n\t\tchrome.runtime.onInstalled.addListener(() => {\n\t\t\tchrome.contextMenus.create({\n\t\t\t\tid: contextMenuId,\n\t\t\t\ttitle: options.title,\n\t\t\t\tcontexts: ['page_action', 'browser_action'],\n\t\t\t\tdocumentUrlPatterns: [\n\t\t\t\t\t'http://*/*',\n\t\t\t\t\t'https://*/*'\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\n\t\tchrome.contextMenus.onClicked.addListener(async ({menuItemId}, {tabId, url}) => {\n\t\t\tif (menuItemId !== contextMenuId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchrome.permissions.request({\n\t\t\t\torigins: [\n\t\t\t\t\t`${new URL(url).origin}/*`\n\t\t\t\t]\n\t\t\t}, granted => {\n\t\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\t\tconsole.error(`Error: ${chrome.runtime.lastError.message}`);\n\t\t\t\t\talert(`Error: ${chrome.runtime.lastError.message}`);\n\t\t\t\t} else if (granted && options.reloadOnSuccess && confirm(options.reloadOnSuccess)) {\n\t\t\t\t\tchrome.tabs.reload(tabId);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n};\n\nif (typeof module === 'object') {\n\tmodule.exports = DCE;\n}\n","import pingContentScript from 'webext-content-script-ping';\n\nasync function p(fn, ...args) {\n\treturn new Promise((resolve, reject) => fn(...args, r => {\n\t\tif (chrome.runtime.lastError) {\n\t\t\treject(chrome.runtime.lastError);\n\t\t} else {\n\t\t\tresolve(r);\n\t\t}\n\t}));\n}\n\nexport async function addToTab(tab, contentScripts) {\n\tif (typeof tab !== 'object' && typeof tab !== 'number') {\n\t\tthrow new TypeError('Specify a Tab or tabId');\n\t}\n\n\tif (!contentScripts) {\n\t\t// Get all scripts from manifest.json\n\t\tcontentScripts = chrome.runtime.getManifest().content_scripts;\n\t} else if (!Array.isArray(contentScripts)) {\n\t\t// Single script object, make it an array\n\t\tcontentScripts = [contentScripts];\n\t}\n\n\ttry {\n\t\tconst tabId = tab.id || tab;\n\t\tif (!await pingContentScript(tabId)) {\n\t\t\tconst injections = [];\n\t\t\tfor (const group of contentScripts) {\n\t\t\t\tconst allFrames = group.all_frames;\n\t\t\t\tconst runAt = group.run_at;\n\t\t\t\tfor (const file of group.css) {\n\t\t\t\t\tinjections.push(p(chrome.tabs.insertCSS, tabId, {file, allFrames, runAt}));\n\t\t\t\t}\n\t\t\t\tfor (const file of group.js) {\n\t\t\t\t\tinjections.push(p(chrome.tabs.executeScript, tabId, {file, allFrames, runAt}));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.all(injections);\n\t\t}\n\t} catch (err) {\n\t\t// Probably the domain isn't permitted.\n\t\t// It's easier to catch this than do 2 queries\n\t}\n}\n\nexport function addToFutureTabs(scripts) {\n\tchrome.tabs.onUpdated.addListener((tabId, {status}) => {\n\t\tif (status === 'loading') {\n\t\t\taddToTab(tabId, scripts);\n\t\t}\n\t});\n}\n\nexport default {\n\taddToTab,\n\taddToFutureTabs\n};\n","// https://github.com/bfred-it/webext-options-sync\n\nclass OptionsSync {\n\tconstructor(storageName = 'options') {\n\t\tthis.storageName = storageName;\n\t}\n\n\tdefine(defs) {\n\t\tdefs = Object.assign({\n\t\t\tdefaults: {},\n\t\t\tmigrations: [],\n\t\t}, defs);\n\n\t\tif (chrome.runtime.onInstalled) { // In background script\n\t\t\tchrome.runtime.onInstalled.addListener(() => this._applyDefinition(defs));\n\t\t} else { // In content script, discouraged\n\t\t\tthis._applyDefinition(defs);\n\t\t}\n\t}\n\n\tasync _applyDefinition(defs) {\n\t\tconst options = Object.assign({}, defs.defaults, await this.getAll());\n\n\t\tconsole.group('Appling definitions');\n\t\tconsole.info('Current options:', options);\n\t\tif (defs.migrations.length > 0) {\n\t\t\tconsole.info('Running', defs.migrations.length, 'migrations');\n\t\t\tdefs.migrations.forEach(migrate => migrate(options, defs.defaults));\n\t\t}\n\t\tconsole.groupEnd();\n\n\t\tthis.setAll(options);\n\t}\n\n\t_parseNumbers(options) {\n\t\tfor (const name of Object.keys(options)) {\n\t\t\tif (options[name] === String(Number(options[name]))) {\n\t\t\t\toptions[name] = Number(options[name]);\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\n\tgetAll() {\n\t\treturn new Promise(resolve => {\n\t\t\tchrome.storage.sync.get(this.storageName,\n\t\t\t\tkeys => resolve(keys[this.storageName] || {})\n\t\t\t);\n\t\t}).then(this._parseNumbers);\n\t}\n\n\tsetAll(newOptions) {\n\t\treturn new Promise(resolve => {\n\t\t\tchrome.storage.sync.set({\n\t\t\t\t[this.storageName]: newOptions,\n\t\t\t}, resolve);\n\t\t});\n\t}\n\n\tasync set(newOptions) {\n\t\tconst options = await this.getAll();\n\t\tthis.setAll(Object.assign(options, newOptions));\n\t}\n\n\tsyncForm(form) {\n\t\tif (typeof form === 'string') {\n\t\t\tform = document.querySelector(form);\n\t\t}\n\t\tthis.getAll().then(options => OptionsSync._applyToForm(options, form));\n\t\tform.addEventListener('input', e => this._handleFormUpdates(e));\n\t\tform.addEventListener('change', e => this._handleFormUpdates(e));\n\t\tchrome.storage.onChanged.addListener((changes, namespace) => {\n\t\t\tif (namespace === 'sync') {\n\t\t\t\tfor (const key of Object.keys(changes)) {\n\t\t\t\t\tconst {newValue} = changes[key];\n\t\t\t\t\tif (key === this.storageName) {\n\t\t\t\t\t\tOptionsSync._applyToForm(newValue, form);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic _applyToForm(options, form) {\n\t\tconsole.group('Updating form');\n\t\tfor (const name of Object.keys(options)) {\n\t\t\tconst els = form.querySelectorAll(`[name=\"${name}\"]`);\n\t\t\tconst [field] = els;\n\t\t\tif (field) {\n\t\t\t\tconsole.info(name, ':', options[name]);\n\t\t\t\tswitch (field.type) {\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tfield.checked = options[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'radio': {\n\t\t\t\t\t\tconst [selected] = [...els].filter(el => el.value === options[name]);\n\t\t\t\t\t\tif (selected) {\n\t\t\t\t\t\t\tselected.checked = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfield.value = options[name];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('Stored option {', name, ':', options[name], '} was not found on the page');\n\t\t\t}\n\t\t}\n\t\tconsole.groupEnd();\n\t}\n\n\t_handleFormUpdates({target: el}) {\n\t\tconst {name} = el;\n\t\tlet {value} = el;\n\t\tif (!name || !el.validity.valid) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (el.type) {\n\t\t\tcase 'select-one':\n\t\t\t\tvalue = el.options[el.selectedIndex].value; // eslint-disable-line prefer-destructuring\n\t\t\t\tbreak;\n\t\t\tcase 'checkbox':\n\t\t\t\tvalue = el.checked;\n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\t\tconsole.info('Saving option', el.name, 'to', value);\n\t\tthis.set({\n\t\t\t[name]: value,\n\t\t});\n\t}\n}\n\nOptionsSync.migrations = {\n\tremoveUnused(options, defaults) {\n\t\tfor (const key of Object.keys(options)) {\n\t\t\tif (!(key in defaults)) {\n\t\t\t\tdelete options[key];\n\t\t\t}\n\t\t}\n\t}\n};\n\nif (typeof HTMLElement !== 'undefined') {\n\tclass OptionsSyncElement extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tnew OptionsSync(this.getAttribute('storageName') || undefined).syncForm(this);\n\t\t}\n\t}\n\ttry {\n\t\tcustomElements.define('options-sync', OptionsSyncElement);\n\t} catch (err) {/* */}\n}\n\nif (typeof module === 'object') {\n\tmodule.exports = OptionsSync;\n}\n","import OptionsSync from 'webext-options-sync';\nimport domainPermissionToggle from 'webext-domain-permission-toggle';\nimport dynamicContentScripts from 'webext-dynamic-content-scripts';\n\n// // Define defaults\n// new OptionsSync().define({\n// \tdefaults: {\n// \t\tdisabledFeatures: '',\n// \t\tcustomCSS: '',\n// \t\tpersonalToken: '',\n// \t\tlogging: false\n// \t},\n// \tmigrations: [\n// \t\t// Migration example:\n// \t\toptions => {\n// \t\t\t// #1330\n// \t\t\toptions.disabledFeatures = options.disabledFeatures.replace('move-account-switcher-to-sidebar', '');\n// \t\t},\n// \t\tOptionsSync.migrations.removeUnused\n// \t]\n// });\n\n// browser.runtime.onMessage.addListener(async message => {\n// \tif (!message || message.action !== 'openAllInTabs') {\n// \t\treturn;\n// \t}\n// \tconst [currentTab] = await browser.tabs.query({currentWindow: true, active: true});\n// \tfor (const [i, url] of message.urls.entries()) {\n// \t\tbrowser.tabs.create({\n// \t\t\turl,\n// \t\t\tindex: currentTab.index + i + 1,\n// \t\t\tactive: false\n// \t\t});\n// \t}\n// });\n\n// browser.runtime.onInstalled.addListener(async ({reason}) => {\n// \t// Cleanup old key\n// \t// TODO: remove in the future\n// \tbrowser.storage.local.remove('userWasNotified');\n\n// \t// Only notify on install\n// \tif (reason === 'install') {\n// \t\tconst {installType} = await browser.management.getSelf();\n// \t\tif (installType === 'development') {\n// \t\t\treturn;\n// \t\t}\n// \t\tbrowser.tabs.create({\n// \t\t\turl: 'https://github.com/sindresorhus/refined-github/issues/1137',\n// \t\t\tactive: false\n// \t\t});\n// \t}\n// });\n\n// GitHub Enterprise support\n// dynamicContentScripts.addToFutureTabs();\n// domainPermissionToggle.addContextMenu();\n\nbrowser.browserAction.onClicked.addListener(() => {\n\tbrowser.tabs.executeScript({file: \"browser-polyfill.min.js\"});\n\tbrowser.tabs.insertCSS({file: \"content.css\"});\n  browser.tabs.executeScript({file: \"content.js\"});\n});\n"],"sourceRoot":""}